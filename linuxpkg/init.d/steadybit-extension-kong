#!/bin/sh
#
# Copyright 2023 steadybit GmbH. All rights reserved.
#

### BEGIN INIT INFO
# Provides:          steadybit-extension-kong
# Required-Start:    $local_fs $network $named $time $syslog
# Required-Stop:     $local_fs $network $named $time $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Description:       Steadybit Extension Kong
# chkconfig:         2345 99 01
### END INIT INFO

SCRIPT=/opt/steadybit/extension-kong/extension-kong
RUNAS=steadybit

PIDFILE=/var/run/steadybit-extension-kong.pid
LOGFILE=/var/log/steadybit-extension-kong.log
ENVFILE=/etc/steadybit/extension-kong

start() {
  if [ -f "$PIDFILE" ] && kill -0 "$(cat "$PIDFILE")"; then
    echo 'Service already running' >&2
    return 1
  fi
  echo 'Starting service...' >&2

  if [ ! -e "$LOGFILE" ]; then
    touch "$LOGFILE"
    if [ -n "$RUNAS" ]; then
      chown "$RUNAS" "$LOGFILE"
    fi
  fi

  if [ -f "$ENVFILE" ]; then
    export $(grep -v "^#" "$ENVFILE" | xargs)
  fi

  su -s /bin/sh -c "$SCRIPT > \"$LOGFILE\" 2>&1 & echo \$!" $RUNAS >"$PIDFILE"
  PID=$(cat "$PIDFILE")
  sleep 1

  if [ -z "$PID" ] || ! kill -0 "$PID" 2>/dev/null; then
    echo "Service failed to start" >&2
    tail -n 10 "$LOGFILE"
    return 1
  fi
  echo 'Service started' >&2
}

stop() {
  if [ ! -f "$PIDFILE" ] || ! kill -0 "$(cat "$PIDFILE")" 2>/dev/null; then
    echo 'Service not running' >&2
    return 1
  fi
  echo 'Stopping service...' >&2
  kill -15 "$(cat "$PIDFILE")" && rm -f "$PIDFILE"
  echo 'Service stopped' >&2
}

status() {
  if [ ! -f "$PIDFILE" ]; then
    echo 'Service not running'. >&2
    return 3
  fi
  PID=$(cat "$PIDFILE")
  if ! kill -0 "$PID" 2>/dev/null; then
    echo "Service not running: process $PID not found." >&2
    return 1
  fi

  echo 'Service running'. >&2
  return 0
}

case "$1" in
start)
  start
  ;;
status)
  status
  ;;
stop)
  stop
  ;;
force-reload)
  stop
  start
  ;;
restart)
  stop
  start
  ;;
*)
  echo "Usage: $0 {start|stop|status|restart}"
  ;;
esac
